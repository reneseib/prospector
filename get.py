from numba import njit, typeof, typed, types
import numpy as np
from itertools import chain

bla = [
    1.123123,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
]
blub = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]], dtype=object)

bla = list(chain(*bla))

blub = blub.flatten()

print(bla)
print(blub)


#
#
# float_array = types.float64[:]
#
# d1 = typed.Dict.empty(
#     key_type=types.unicode_type,
#     value_type=float_array,
# )
# d2 = typed.Dict.empty(
#     key_type=types.unicode_type,
#     value_type=typeof(d1),  # base the d2 instance values of the type of d1
# )
#
# d3 = typed.Dict.empty(key_type=types.int64, value_type=typeof(d2))
# #
#
# d1["bla"] = np.array([4.312323, 2.123784, 8.234234])
# d1["asdasd"] = np.array(
#     [
#         [681545.89763492, 5307954.42966082],
#         [681658.73936926, 5308028.02175132],
#         [681778.26691051, 5308100.63661552],
#         [681922.25922828, 5308189.65560184],
#         [682033.38431816, 5308259.28561563],
#         [682044.97442753, 5308263.93435683],
#         [682071.59220517, 5308265.51993525],
#         [682172.85302116, 5308128.93855267],
#         [682253.01987149, 5307893.24053291],
#         [682276.19386866, 5307814.94452642],
#         [682312.40956315, 5307753.88097558],
#         [682340.53494646, 5307708.55887633],
#         [682373.01644141, 5307662.23991384],
#         [682449.84440712, 5307565.17193026],
#         [682528.0674794, 5307476.3477325],
#         [682597.42001567, 5307382.54915743],
#         [682697.13040599, 5307249.23049568],
#         [682700.61419995, 5307227.58127765],
#         [682695.00337947, 5307213.38671642],
#         [682688.80435543, 5307203.58996651],
#         [682660.64275079, 5307200.27314114],
#         [682607.70194591, 5307195.98298851],
#         [682554.0166277, 5307275.51507749],
#         [682468.92577277, 5307269.85294713],
#         [682488.80525451, 5307218.04090031],
#         [682457.85543382, 5307217.48473919],
#         [682466.41004736, 5307189.24323938],
#         [682390.72792525, 5307188.38532612],
#         [682232.8333549, 5307206.05637191],
#         [682120.12331712, 5307222.28774038],
#         [681873.32289339, 5307252.61448727],
#         [681793.53364954, 5307266.98655964],
#         [681744.2949936, 5307286.27121937],
#         [681715.16943735, 5307286.48844763],
#         [681650.346212, 5307276.57095892],
#         [681584.43046351, 5307254.29400097],
#         [681494.51533481, 5307245.25724685],
#         [681455.86541645, 5307492.1373196],
#         [681464.76693692, 5307587.78663641],
#         [681282.76405437, 5307599.41819804],
#         [681258.7905385, 5307598.82060034],
#         [681252.91306939, 5307594.20842851],
#         [681151.16666394, 5307614.75174661],
#         [681164.79815508, 5307669.27754866],
#         [681174.57916115, 5307667.27087535],
#         [681184.92028838, 5307720.31398606],
#         [681281.13844521, 5307705.66039842],
#         [681284.66018063, 5307729.99994176],
#         [681259.98538574, 5307732.92894025],
#         [681270.55640875, 5307788.14873721],
#         [681292.92121388, 5307799.44200602],
#         [681314.26923205, 5307812.61679697],
#         [681545.89763492, 5307954.42966082],
#     ]
# )
#
#
# print(d1)

#
# print("d1's Numba type is", typeof(d1))
# # d1 is an instance so you can use it like a dict
# d1["bla"] = 6.0
# print(d1)
#
#
# @njit
# def foo(d2):
#     d2["bla"] = {9.0: 3.0}
#     return d2
#
#
# print("Using d2")
# print(foo(d1))
#
# # you can also spell it like this:
# d1_type = types.DictType(types.float64, types.float64)
# d3 = typed.Dict.empty(types.float64, d1_type)
#
# print("Using d3")
# print(foo(d3))
